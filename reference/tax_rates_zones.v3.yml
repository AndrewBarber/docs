openapi: '3.0.3'
info:
  title: Carts
  version: ''
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  description: |-
    Create a cart using BigCommerce cart logic.
    
    Manage settings related to carts.
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Carts (Single)
  - name: Metafields
paths:
  '/carts/metafields':
    get:
      summary: Get All Metafields
      tags:
        - Metafields
      description: Get all cart metafields.
      operationId: getCartsMetafields #getAllMetafeilds
      responses:
        '200':
          description: |
            List of `Metafield` objects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaFieldCollectionResponse'
        '500':
          description: Internal Server Error
      parameters:
        - $ref: '__shared_models.yml#/components/parameters/PageParam'
        - $ref: '__shared_models.yml#/components/parameters/LimitParam'
        - $ref: '__shared_models.yml#/components/parameters/MetafieldKeyParam'
        - $ref: '__shared_models.yml#/components/parameters/MetafieldKeyInParam'
        - $ref: '__shared_models.yml#/components/parameters/MetafieldNamespaceParam'
        - $ref: '__shared_models.yml#/components/parameters/MetafieldNamespaceInParam'
        - $ref: '__shared_models.yml#/components/parameters/DirectionParam'
    post:
      summary: Create multiple Metafields
      tags:
        - Metafields
      description: Create multiple metafields.
      operationId: createCartsMetafields
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MetafieldPost'
        description: ''
      responses:
        '200':
          description: |
            List of created `Metafield` objects. # TODO
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaFieldCollectionResponse'
        '422':
          description: |
            Response object for metafields creation with partial success.
          content:
            application/json:
              schema:
                $ref: '__shared_models.yml#/components/schemas/MetaFieldCollectionResponse'
        '500':
          description: Internal Server Error
    put:
      summary: Update multiple Metafields
      tags:
        - Metafields
      description: Create multiple metafields.
      operationId: updateCartsMetafields
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MetafieldPut'
        description: ''
      responses:
        '200':
          description: |
            List of updated `Metafield` objects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaFieldCollectionResponse'
        '422':
          description: |
            Response object for metafields creation with partial success.
          content:
            application/json:
              schema:
                $ref: '__shared_models.yml#/components/schemas/MetaFieldCollectionResponse'
        '500':
          description: Internal Server Error
    delete:
      summary: Delete All Metafields
      tags:
        - Metafields
      description: Delete all cart metafields.
      operationId: deleteCartMetafields
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
        description: Metafieldʼs ID list.
      responses:
        '200':
          description: |
            Response object for metafields deletion with success.
          content:
            application/json:
              schema:
                $ref: '__shared_models.yml#/components/schemas/MetaFieldCollectionDeleteResponseSuccess'
        '422':
          description: |
            Response object for metafields deletion with partial success.
          content:
            application/json:
              schema:
                $ref: '__shared_models.yml#/components/schemas/MetaFieldCollectionDeleteResponsePartialSuccess'
components:
  schemas:
    Metafield:
      type: object
      description: |
        Common Metafield properties.
      x-internal: false
      properties:
        permission_set:
          type: string
          description: |
            Determines the visibility and writeability of the field by other API consumers.
            | Value | Description |
            | :--- | :--- |
            | `app_only` | Private to the app that owns the field. |
            | `read` | Visible to other API consumers. |
            | `write` | Open for reading and writing by other API consumers. |
            | `read_and_sf_access` | Visible to other API consumers, including on storefront. |
            | `write_and_sf_access` | Open for reading and writing by other API consumers, including on storefront. |
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        namespace:
          type: string
          description: |
            Namespace for the metafield, for organizational purposes.
          example: Sales Department
          minLength: 1
          maxLength: 64
        key:
          type: string
          description: |
            The name of the field, for example: `location_id`, `color`.
          minLength: 1
          maxLength: 64
          example: Staff Name
        value:
          type: string
          description: |
            The value of the field, for example: `1`, `blue`.
          minLength: 1
          maxLength: 65535
          example: Ronaldo
        description:
          type: string
          description: |
            Description for the metafields.
          example: order
          minLength: 0
          maxLength: 255
        resource_type:
          type: string
          description: |
            The type of resource with which the metafield is associated.
          enum:
            - brand
            - product
            - variant
            - category
            - cart
          example: cart
        resource_id:
          type: string
          description: |
            The unique identifier for the resource with which the metafield is associated.
          example: '0'
          readOnly: true
        id:
          type: integer
          description: The unique identifier for the metafield.
        date_created:
          type: string
          format: date-time
          description: Date and time of the metafieldʼs creation.
          example: '2022-06-16T18:39:00+00:00'
        date_modified:
          type: string
          format: date-time
          description: Date and time when the metafield was last updated.
          example: '2022-06-16T18:39:00+00:00'
      required:
        - namespace
        - key
        - value
        - permission_set
        - resource_type
        - resource_id
        - description
        - id
        - date_created
        - date_modified
    MetaFieldCollectionResponse:
      type: object
      description: |
        Response payload for the BigCommerce API.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Metafield'
        meta:
          $ref: '__shared_models.yml#/components/schemas/CollectionMeta'
      x-internal: false
    MetafieldPost:
      description: |
        The model for a POST to create metafield.
      allOf:
        - $ref: '__shared_models.yml#/components/schemas/MetafieldBase_Post'
        - type: object
          properties:
            resource_id:
              type: string
              example: "42"
              description: |
                The id for the cart with which the metafield is associated.
          required:
            - resource_id
      x-internal: false
    MetafieldPut:
      description: |
        The model for a PUT to create metafield.
      allOf:
        - $ref: '__shared_models.yml#/components/schemas/MetafieldBase_Put'
        - type: object
          properties:
            resource_id:
              type: string
              example: "42"
              description: |
                The id for the cart with which the metafield is associated.
            id:
              type: string
              example: "42"
              description: |
                The id of metafield to update.
          required:
            - id
      x-internal: false
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |Carts|modify|`store_cart`|
        |Carts |read-only|`store_cart_read_only`|

        ### Authentication header

        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |

        ### Further reading

        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).

        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).

        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header