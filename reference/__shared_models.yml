openapi: '3.0.3'
info:
  title: "Metaifield components"
  version: ""
  description: "Shared components for metafields"
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
paths: {}
components:
  schemas:
    MetafieldResponse:
      description: |
        Response payload for the BigCommerce API.
      x-internal: false
      properties:
        data:
          $ref: '#/components/schemas/Metafield'
        meta: # should be empty
          $ref: '#/components/schemas/CollectionMeta'
    Metafield:
      type: object
      description: |
        Common Metafield properties.
      x-internal: false
      properties:
        permission_set:
          type: string
          description: |
            Determines the visibility and writeability of the field by other API consumers.
            | Value | Description |
            | :--- | :--- |
            | `app_only` | Private to the app that owns the field. |
            | `read` | Visible to other API consumers. |
            | `write` | Open for reading and writing by other API consumers. |
            | `read_and_sf_access` | Visible to other API consumers, including on storefront. |
            | `write_and_sf_access` | Open for reading and writing by other API consumers, including on storefront. |
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        namespace:
          type: string
          description: |
            Namespace for the metafield, for organizational purposes.
          example: Sales Department
          minLength: 1
          maxLength: 64
        key:
          type: string
          description: |
            The name of the field, for example: `location_id`, `color`.
          minLength: 1
          maxLength: 64
          example: Staff Name
        value:
          type: string
          description: |
            The value of the field, for example: `1`, `blue`.
          minLength: 1
          maxLength: 65535
          example: Ronaldo
        description:
          type: string
          description: |
            Description for the metafields.
          example: order
          minLength: 0
          maxLength: 255
        resource_type:
          type: string
          description: |
            The type of resource with which the metafield is associated.
          enum:
            - brand
            - product
            - variant
            - category
            - cart
            - channel
            - location
            - order
            - customer
          example: cart
        resource_id:
          type: integer
          description: |
            The unique identifier for the resource with which the metafield is associated.
          example: 424242
          readOnly: true
        id:
          type: integer
          description: The unique identifier for the metafield.
        date_created:
          type: string
          format: date-time
          description: Date and time of the metafield ºs creation.
          example: '2022-06-16T18:39:00+00:00'
        date_modified:
          type: string
          format: date-time
          description: Date and time when the metafield was last updated.
          example: '2022-06-16T18:39:00+00:00'
      required:
        - namespace
        - key
        - value
        - permission_set
        - resource_type
        - resource_id
        - description
        - id
        - date_created
        - date_modified
    MetaFieldCollectionResponse:
      type: object
      description: |
        Response payload for the BigCommerce API.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Metafield'
        meta:
          $ref: '#/components/schemas/CollectionMeta'
      x-internal: false
    MetaFieldCollectionDeleteResponsePartialSuccess:
      type: object
      description: |
        Response payload for the BigCommerce API.
      properties:
        data:
          type: array
          items:
            type: integer
            description: |
              The unique identifier for the metafield.
          example: [
            123
          ]
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        meta:
          $ref: '#/components/schemas/WriteCollectionPartialSuccessMeta'
      x-internal: false
    MetaFieldCollectionDeleteResponseSuccess:
      type: object
      description: |
        Response payload for the BigCommerce API.
      properties:
        data:
          type: array
          items:
            type: integer
            description: |
              The unique identifier for the metafield.
          example: [
            123,
            124,
            125
          ]
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
          example: []
        meta:
          $ref: '#/components/schemas/WriteCollectionSuccessMeta'
      x-internal: false
    WriteCollectionPartialSuccessMeta:
      type: object
      description: 'Additional data about the response.'
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 3
        success:
          type: integer
          description: |
            Total number of items that were successfully deleted.
          example: 1
        failed:
          type: integer
          description: |
            Total number of items that failed to be deleted.
          example: 2
      title: Collection Meta
      x-internal: false
    WriteCollectionSuccessMeta:
      type: object
      description: 'Additional data about the response.'
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 3
        success:
          type: integer
          description: |
            Total number of items that were successfully deleted.
          example: 3
        failed:
          type: integer
          description: |
            Total number of items that failed to be deleted.
          example: 0
      title: Collection Meta
      x-internal: false
    Total:
      type: integer
      description: |
        Total number of items in the result set.
      example: 3
    Success:
      type: integer
      description: |
        Total number of items that were successfully deleted.
      example: 1
    Failed:
      type: integer
      description: |
        Total number of items that failed to be deleted.
      example: 2
    Error:
      type: object
      description: |
        Error response payload for the BigCommerce API.
      properties:
        status:
          type: integer
          description: |
            The HTTP status code for the error.
          example: 422
        title:
          type: string
          description: |
            The error title.
          example: Bulk operation has failed
        type:
          type: string
          description: |
            The error type.
          example: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
        errors:
          $ref: '#/components/schemas/ErrorDetail'
    ErrorDetail:
      type: object
      description: |
        Error detail response payload for the BigCommerce API.
      example:
        {
          "1": "Unauthorized to delete",
          "2": "Metafield does not exist"
        }
    CollectionMeta:
      type: object
      description: 'Data about the response, including pagination and collection totals.'
      properties:
        pagination:
          type: object
          description: 'Data about the response, including pagination and collection totals.'
          title: Pagination
          properties:
            total:
              type: integer
              description: |
                Total number of items in the result set.
              example: 36
            count:
              type: integer
              description: |
                Total number of items in the collection response.
              example: 36
            per_page:
              type: integer
              description: |
                The amount of items returned in the collection per page, controlled by the limit parameter.
              example: 50
            current_page:
              type: integer
              description: |
                The page you are currently on within the collection.
              example: 1
            total_pages:
              type: integer
              description: |
                The total number of pages in the collection.
              example: 1
            links:
              type: object
              description: |
                Pagination links for the previous and next parts of the whole collection.
              properties:
                previous:
                  type: string
                  description: |
                    Link to the previous page returned in the response.
                current:
                  type: string
                  description: |
                    Link to the current page returned in the response.
                  example: '?page=1&limit=50'
                next:
                  type: string
                  description: |
                    Link to the next page returned in the response.
      additionalProperties: true
      title: Collection Meta
      x-internal: false
    MetafieldBase_Post:
      type: object
      description: |
        Common Metafield properties.
      x-internal: false
      properties:
        permission_set:
          type: string
          description: |
            Determines the visibility and writeability of the field by other API consumers.
            | Value | Description |
            | :--- | :--- |
            | `app_only` | Private to the app that owns the field. |
            | `read` | Visible to other API consumers. |
            | `write` | Open for reading and writing by other API consumers. |
            | `read_and_sf_access` | Visible to other API consumers, including on storefront. |
            | `write_and_sf_access` | Open for reading and writing by other API consumers, including on storefront. |
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        namespace:
          type: string
          description: |
            Namespace for the metafield, for organizational purposes.
          example: Sales Department
          minLength: 1
          maxLength: 64
        key:
          type: string
          description: |
            The name of the field, for example: `location_id`, `color`.
          minLength: 1
          maxLength: 64
          example: Staff Name
        value:
          type: string
          description: |
            The value of the field, for example: `1`, `blue`.
          minLength: 1
          maxLength: 65535
          example: Ronaldo
        description:
          type: string
          description: |
            Description for the metafields.
          minLength: 0
          maxLength: 255
          example: Name of Staff Member
      required:
        - permission_set
        - namespace
        - key
        - value
    MetafieldPost:
      description: |
        The model for a POST to create metafield.
      allOf:
        - $ref: '__shared_models.yml#/components/schemas/MetafieldBase_Post'
        - type: object
          properties:
            resource_id:
              type: integer
              example: 42
              description: |
                The ID for the resource with which the metafield is associated.
          required:
            - resource_id
      x-internal: false
    MetafieldBase_Put:
      type: object
      description: |
        Common Metafield properties.
      x-internal: false
      properties:
        permission_set:
          type: string
          description: |
            Determines the visibility and writeability of the field by other API consumers.
            | Value | Description |
            | :--- | :--- |
            | `app_only` | Private to the app that owns the field. |
            | `read` | Visible to other API consumers. |
            | `write` | Open for reading and writing by other API consumers. |
            | `read_and_sf_access` | Visible to other API consumers, including on storefront. |
            | `write_and_sf_access` | Open for reading and writing by other API consumers, including on storefront. |
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        namespace:
          type: string
          description: |
            Namespace for the metafield, for organizational purposes.
          example: Sales Department
          minLength: 1
          maxLength: 64
        key:
          type: string
          description: |
            The name of the field, for example: `location_id`, `color`.
          minLength: 1
          maxLength: 64
          example: Staff Name
        value:
          type: string
          description: |
            The value of the field, for example: `1`, `blue`.
          minLength: 1
          maxLength: 65535
          example: Ronaldo
        description:
          type: string
          description: |
            Description for the metafields.
          minLength: 0
          maxLength: 255
          example: Name of Staff Member
    MetafieldPut:
      description: |
        The model for a PUT to create metafield.
      allOf:
        - $ref: '__shared_models.yml#/components/schemas/MetafieldBase_Put'
        - type: object
          properties:
            id:
              type: integer
              example: 42
              description: |
                The ID of metafield to update.
            resource_id:
              type: integer
              example: 42
              description: |
                The ID for the resource with which the metafield is associated.
          required:
            - id
      x-internal: false
  parameters:
    PageParam:
      name: page
      description: |
        Specifies the page number in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
    MetafieldKeyParam:
      name: key
      in: query
      description: Filter based on a metafield ºs key.
      required: false
      schema:
        type: string
    MetafieldKeyInParam:
      name: key:in
      in: query
      description: Filter based on comma separated metafield ºs keys. Could be used with vanila 'key' query parameter.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    MetafieldNamespaceParam:
      name: namespace
      in: query
      description: Filter based on a metafield ºs namespaces.
      required: false
      schema:
        type: string
    MetafieldNamespaceInParam:
      name: namespace:in
      in: query
      description: Filter based on comma separated metafield ºs namespaces. Could be used with vanila 'namespace' query parameter.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    LimitParam:
      name: limit
      description: |
        Controls the number of items per page in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
    DirectionParam:
      name: direction
      description: |
        Sort direction. Acceptable values are: `asc`, `desc`.
      required: false
      in: query
      schema:
        type: string
        enum:
          - asc
          - desc